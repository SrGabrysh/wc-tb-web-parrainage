<?php
/**
 * Script de test pour v√©rifier la restauration des modales
 * √Ä ex√©cuter dans l'admin WordPress ou ajouter temporairement dans functions.php
 */

// Protection acc√®s direct
if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

// Hook de test pour v√©rifier le syst√®me sur la page mes-parrainages
add_action( 'wp_footer', 'test_modal_restoration_debug' );

function test_modal_restoration_debug() {
    // V√©rifier qu'on est sur la bonne page
    if ( ! function_exists( 'is_wc_endpoint_url' ) || ! is_wc_endpoint_url( 'mes-parrainages' ) ) {
        return;
    }
    
    ?>
    <!-- DEBUT TEST MODAL RESTORATION -->
    <script>
    console.log('üîç TEST RESTORATION MODALES - mes-parrainages d√©tect√©e');
    
    // Test 1 : V√©rifier les ic√¥nes pr√©sentes
    setTimeout(function() {
        const icons = document.querySelectorAll('.tb-client-help-icon');
        console.log('üìä Ic√¥nes d\'aide trouv√©es:', icons.length);
        
        if (icons.length > 0) {
            console.log('‚úÖ SUCC√àS: Ic√¥nes d\'aide pr√©sentes');
            icons.forEach(function(icon, index) {
                console.log(`Ic√¥ne ${index + 1}:`, {
                    metric: icon.dataset.metric,
                    title: icon.dataset.title,
                    classes: icon.className
                });
            });
        } else {
            console.error('‚ùå √âCHEC: Aucune ic√¥ne d\'aide trouv√©e');
        }
        
        // Test 2 : V√©rifier le syst√®me JS
        if (typeof tbClientHelp !== 'undefined') {
            console.log('‚úÖ SUCC√àS: tbClientHelp charg√©');
            console.log('üìã Modales disponibles:', Object.keys(tbClientHelp.modals || {}));
        } else {
            console.error('‚ùå √âCHEC: tbClientHelp non charg√©');
        }
        
        // Test 3 : V√©rifier jQuery UI
        if (typeof jQuery !== 'undefined' && typeof jQuery.fn.dialog !== 'undefined') {
            console.log('‚úÖ SUCC√àS: jQuery UI Dialog disponible');
        } else {
            console.error('‚ùå √âCHEC: jQuery UI Dialog non disponible');
        }
        
        // Test 4 : Simuler un clic sur la premi√®re ic√¥ne
        if (icons.length > 0) {
            console.log('üß™ TEST: Simulation clic sur premi√®re ic√¥ne...');
            const firstIcon = icons[0];
            
            // Cr√©er un √©v√©nement de clic
            const clickEvent = new MouseEvent('click', {
                bubbles: true,
                cancelable: true,
                view: window
            });
            
            // D√©clencher le clic
            firstIcon.dispatchEvent(clickEvent);
            
            // V√©rifier si une modal s'ouvre
            setTimeout(function() {
                const modals = document.querySelectorAll('.ui-dialog:visible, .tb-client-help-modal:visible');
                if (modals.length > 0) {
                    console.log('üéâ SUCC√àS TOTAL: Modal ouverte par simulation!');
                    
                    // Fermer la modal apr√®s test
                    jQuery('.ui-dialog:visible').dialog('close');
                    
                } else {
                    console.warn('‚ö†Ô∏è PROBL√àME: Clic simul√© mais aucune modal visible');
                }
            }, 500);
        }
        
        // R√©sum√© final
        const success = icons.length > 0 && typeof tbClientHelp !== 'undefined';
        if (success) {
            console.log('%cüéâ RESTAURATION R√âUSSIE! Les modales devraient fonctionner.', 'color: green; font-weight: bold; font-size: 16px;');
        } else {
            console.log('%c‚ùå RESTAURATION √âCHOU√âE! Probl√®me persistant.', 'color: red; font-weight: bold; font-size: 16px;');
        }
        
    }, 1000);
    
    // Fonction utilitaire pour tests manuels
    window.testModalClick = function(metricKey) {
        const icon = document.querySelector(`[data-metric="${metricKey}"]`);
        if (icon) {
            icon.click();
            console.log(`Test clic sur modale: ${metricKey}`);
        } else {
            console.error(`Ic√¥ne non trouv√©e pour: ${metricKey}`);
        }
    };
    
    console.log('üí° Commandes disponibles:');
    console.log('- testModalClick("active_discounts") // Test modal remises actives');
    console.log('- testModalClick("monthly_savings")  // Test modal √©conomies mensuelles');
    console.log('- testModalClick("total_savings")    // Test modal √©conomies totales');
    console.log('- testModalClick("next_billing")     // Test modal prochaine facture');
    
    </script>
    <!-- FIN TEST MODAL RESTORATION -->
    <?php
}

// Si on est dans l'admin, afficher un status
if ( is_admin() && current_user_can( 'manage_options' ) ) {
    add_action( 'admin_notices', 'test_modal_admin_notice' );
}

function test_modal_admin_notice() {
    ?>
    <div class="notice notice-info">
        <p>
            <strong>üß™ Test Modales Actif</strong> - 
            Allez sur <a href="<?php echo home_url('/mon-compte/mes-parrainages/'); ?>" target="_blank">/mon-compte/mes-parrainages/</a> 
            et ouvrez la console navigateur (F12) pour voir les r√©sultats du test.
        </p>
    </div>
    <?php
}

// Log dans l'admin pour diagnostic
if ( is_admin() ) {
    add_action( 'admin_init', function() {
        if ( ! current_user_can( 'manage_options' ) ) {
            return;
        }
        
        // Test des classes disponibles
        $classes_test = [
            'TemplateModalManager' => class_exists( 'TBWeb\WCParrainage\TemplateModalManager' ),
            'MyAccountModalManager' => class_exists( 'TBWeb\WCParrainage\MyAccountModalManager' ),
            'MyAccountParrainageManager' => class_exists( 'TBWeb\WCParrainage\MyAccountParrainageManager' )
        ];
        
        error_log( 'TEST MODALES - Classes disponibles: ' . json_encode( $classes_test ) );
        
        // Test du plugin principal
        global $wc_tb_parrainage_plugin;
        $plugin_active = isset( $wc_tb_parrainage_plugin ) && is_object( $wc_tb_parrainage_plugin );
        error_log( 'TEST MODALES - Plugin actif: ' . ( $plugin_active ? 'OUI' : 'NON' ) );
    });
}
?>
